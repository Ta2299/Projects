---
title: 'CIND 123 - Data Analytics: Basic Methods'
author: 
output:
  html_document: default
  pdf_document: default
  word_document: default
---
<center> <h1> Assignment 1 (10%) </h1> </center>
<center>  <h3> [Tara Shingadia] </h2> </center>
<center> <h3> [CIND123 D10 & 500847789] </h2> </center>
---
## Instructions 

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. Review this website for more details on using R Markdown <http://rmarkdown.rstudio.com>.

Use RStudio for this assignment. Complete the assignment by inserting your R code wherever you see the string "#INSERT YOUR ANSWER HERE".

When you click the **Knit** button, a document (PDF, Word, or HTML format) will be generated that includes both the assignment content as well as the output of any embedded R code chunks.

Submit **both**  the rmd and generated output files. Failing to submit both files will be subject to mark deduction.

## Sample Question and Solution

Use `seq()` to create the vector $(1,2,3,\ldots,10)$.

```{r}
seq(1,10)
```

## Question 1

a) Create and print a vector `x` with all integers 1-100, and a vector `y` with every fifth integer in the same range. What is the difference in lengths of the vectors `x` and `y`?. (8 points)
Hint: use `seq()`function, every fifth element of "y" will be like [1,6,11,.....].

```{r}
#INSERT YOUR ANSWER HERE
x <- seq(1,100)
y <- seq(1,100,5)
x
y
length(x)
length(y)
message("The difference in lengths is: ", length(x)-length(y))

```

b) Create a new vector, "x_square", with the square of elements at indices 3, 6, 7, 10, 15, 22, 23, 24, and 30 from the variable "x". 
Hint: Use indexing rather than a for loop. Calculate the mean and median of the last five values from x_square.

```{r}
#INSERT YOUR ANSWER HERE
x_square <- x[c(3, 6, 7, 10, 15, 22, 23, 24, 30)]^2
x_square
mean1 <- mean(tail(x_square, 5))
message("The mean is: ", mean1)
median1 <- median(tail(x_square, 5))
message("The median is: ", median1)
```

c) Would it be correct to use the following commands to convert a factor variable to a numeric variable? Explain your answer.

`factorVar <- factor(c(1, 6, 5.4, 3.2));as.numeric(factorVar)`

```{r}
#INSERT YOUR ANSWER HERE
factorVar <- factor(c(1, 6, 5.4, 3.2));as.numeric(factorVar)
factorVar
message("It would be correct to output a factor variable into a numeric variable this way because the as.numeric command ranks each number in the factors list from least to greatest i.e lowest number is 1 and highest number is 4. The output is each number with their corresponding rank number. But to convert the factor variables that are assigned to factorVar so that when factorVar is called, the variables outputted are numeric, you would have to use the as.numeric command in another line and assign it to a variable.")
```

d) Assume that you would read a comma-separated file `dataset.csv` consists of missing values represented by question marks (`?`) and exclamation mark (`!`). How can you read this type of files in R (please include your code in the answer section)?

```{r}
#INSERT YOUR ANSWER HERE
#dataset <- read.csv('dataset.csv', na.strings=c("?","!"))
```

\newpage
## Question 2

a) Compute: $$\sum_{n=1}^{100}\frac{2^{n}}{(n-1)!}$$

```{r}
#INSERT YOUR ANSWER HERE
n1 <- seq(1, 100)
sum(2^n1/factorial(n1-1))
```

b) Compute: $$\sum_{n=1}^{10}\left(\frac{2^{n}}{n^2} + \frac{n^{4}}{4^{n}}\right)$$

```{r}
#INSERT YOUR ANSWER HERE
n2 <- seq(1, 10)
sum(2^n2/n2^2 + n2^4/4^n2)
```

c) Compute: $$\sum_{n=0}^{10} \frac{1}{(n+1)!}$$ (Hint: Use `factorial(n)` to compute $n!$)

```{r}
#INSERT YOUR ANSWER HERE
n3 <- seq(0, 10)
sum(1/factorial(n3+1))
```

d) Compute: $$\prod_{n=3}^{33} \left(3n + \frac{3}{\sqrt[3]{n}}\right)$$

```{r}
#INSERT YOUR ANSWER HERE
n4 <- seq(3, 33)
prod(3*n4 + (3/n4^(1/3)))
```

e) Explain the output of this R-command:
`c(0:5)[NA]`

```{r}
#INSERT YOUR ANSWER HERE  
c(0:5)[NA]
message("This R command combines and outputs a vector. In this case 0:5 is already a vector and [] is used to index a value in the vector. Since the index is not available, for each of the values in the vector the output is not available, resulting in NA being repeated 6 times.")
```

f) What is the difference between is.vector() and is.numeric() functions?

```{r}
#INSERT YOUR ANSWER HERE
message("is.numeric returns True if the base type of the class is double or integer and values can reasonably be regarded as numeric. For is.vector, it checks the class of your object and you can specify the mode which will return true i.e mode = 'numeric' or mode = 'double'. The difference can be seen when you check for boolean or character values in your vector.")
```

g) There are lost of packages in R. `RShiny` is one of it (https://shiny.rstudio.com/). Please investigate this package and list at least three advantages and three disadvantages of using `RShiny` package?
```{r}
#INSERT YOUR ANSWER HERE 
message("**Advantages of RShiny:**
        1. Build interactive web apps from R
        2. You can host the apps on a web page or embed them in R markdown or dashboards.
        3. No web development skills are needed.
**Disadvantages of RShiny:**
        1. Must be able to write code in R proficiently
        2. Anticipating the scale for an application (how many hours is enough? you only get 25 hrs/month free and limited RAM)
        3. May need dev ops or a data engineer to set up your apps for deployment")
```

\newpage
## Question 3
`iris` dataset gives the measurements in centimeters of the variables sepal length, sepal width, petal length and petal width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.

Install the `iris` dataset on your computer using the command `install.packages("datasets")`. Then, load the `datasets` package into your session using the following command.
```{r}
#install.packages("datasets")
library(datasets)
```

a) Display the first ten rows of the `iris` data set.

```{r}
#INSERT YOUR ANSWER HERE
head(iris, n=10)
```

b) Compute the average of the first four variables (Sepal.Length, Sepal.Width, Petal.Length and Petal.Width) using `sapply()` function.

Hint: You might need to consider removing the `NA` values, otherwise the average will not be computed.

```{r}
#INSERT YOUR ANSWER HERE
sapply(iris[1:4], mean, na.rm = TRUE)
```

c) Show how to use R to replace the missing values in this dataset with plausible ones.

```{r}
#INSERT YOUR ANSWER HERE
message("To replace the missing values (if there were any) you would add na.rm = TRUE to your code which will remove the NA values and perform the computation.")
```

d) Compute the standard deviation for only the first and the third variables (Sepal.Length and Petal.Length)

```{r}
#INSERT YOUR ANSWER HERE
sapply(iris[c(1, 3)], sd)
```

e) Construct a boxplot for `Sepal.Width` variable, then display the values of all the outliers. Explain how these outliers have been calculated.

```{r}
#INSERT YOUR ANSWER HERE
b <- boxplot(iris$Sepal.Width, outline = TRUE,  horizontal = TRUE)
b$out
message("The outliers have been calculated using the b$out command which outputs all the values that are not within the whiskers of the boxplot. The outlier numbers are either less than Q1 - 1.5*IQR or greater than Q3 + 1.5*IQR")
```

f) Compute the upper quartile of the `Sepal.Width` variable with two different methods.

```{r}
#INSERT YOUR ANSWER HERE
message('method 1:')
quantile(iris$Sepal.Width, prob = .75)
message('method 2:')
summary(iris$Sepal.Width)

```

g) Construct a pie chart to describe the species with 'Sepal.Length' less than 7 centimeters.
```{r}
#INSERT YOUR ANSWER HERE
iris2 <- subset(iris, Sepal.Length < 7)
iris2
table1 <- table(iris2$Species)
table1
pie(table1)
```

END of Assignment #1.
